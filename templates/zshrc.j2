# This file is managed by Ansible, all changes will be lost

# Path to your oh-my-zsh configuration.
ZSH="{{ ohmyzsh_install_dir }}"

# Disable odd message regading completions on mac when doing 'sudo su'
ZSH_DISABLE_COMPFIX=true

# Colorize output
export CLICOLOR=1
export LSCOLORS=ExFxBxDxCxegedabagacad

# For Solarized
export TERM="xterm-256color"

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
# ZSH_THEME="random"
ZSH_THEME="{{ item.theme if
  (item is defined and item.theme is defined and item.theme != 'powerlevel9k/powerlevel9k')
  or (item is defined and item.theme is defined
  and item.theme == 'powerlevel9k/powerlevel9k' and ohmyzsh_powerlevel9k == true) or (item is defined and item.theme is defined
  and item.theme == 'powerlevel10k/powerlevel10k' and ohmyzsh_powerlevel9k == true)
  else ohmyzsh_default_theme }}"

{% if ohmyzsh_powerlevel9k is defined and ohmyzsh_powerlevel9k == true %}
source "{{ ohmyzsh_powerlevel9k_cfg }}"
{% endif %}
# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Comment this out to disable bi-weekly auto-update checks
# DISABLE_AUTO_UPDATE="true"

# Uncomment to change how many often would you like to wait before auto-updates occur? (in days)
# export UPDATE_ZSH_DAYS=13

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
# COMPLETION_WAITING_DOTS="true"

{% if item is defined and item.ssh_ids is defined %}
# SSH ids
zstyle :omz:plugins:ssh-agent agent-forwarding on
zstyle :omz:plugins:ssh-agent identities {{ item.ssh_ids|join(' ') }}
{% endif %}

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format:count plugins=(rails git textmate ruby lighthouse)
{% if item is defined and item.plugins is defined %}
default_plugins=({{ (ohmyzsh_default_plugins|list + item.plugins|list)|join(' ') }})
{% else %}
default_plugins=({{ ohmyzsh_default_plugins|join(' ') }})
{% endif %}

{% if item is defined and item.plugins is defined %}
custom_plugins=({{ (ohmyzsh_custom_plugins|list + item.plugins|list)|join(' ') }})
{% else %}
custom_plugins=({{ ohmyzsh_custom_plugins|join(' ') }})
{% endif %}

if [[ -f "${HOME}/.zsh/plugins" ]]; then
    . "${HOME}/.zshrc/plugins"
    plugins=( ${default_plugins[@]} ${custom_plugins[@]} )
elif [[ -d "${ZSH}/custom/plugins" ]]; then
    plugins=( ${default_plugins[@]} ${custom_plugins[@]} )
else
    plugins=${default_plugins}
fi

if (( ! ${fpath[(I)/usr/local/share/zsh/site-functions]} )); then
  FPATH=/usr/local/share/zsh/site-functions:$FPATH
fi

source "${ZSH}/oh-my-zsh.sh"

# Customize to your needs...
export PATH="${HOME}/.local/bin:$PATH"
export PATH=$HOME/bin:/usr/local/bin:/usr/local/sbin:$PATH
export GPG_TTY=$(tty)

export EDITOR=vim visudo
export SHELL="/usr/local/bin/zsh"
export LC_TYPE="en_US.UTF-8"
export LANG="en_US.UTF-8"

# Pyenv and pipenv initialization
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"
eval "$(pipenv --completion)"

# Nvm initialization
export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm
[[ -r $NVM_DIR/bash_completion ]] && \. $NVM_DIR/bash_completion

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="$HOME/.sdkman"
[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"

# Load aliases
if [ -f "${HOME}/.zsh/aliases" ]; then
    source "${HOME}/.zsh/aliases"
fi

# Load custom configs
if [ -d "${HOME}/.zsh/conf.d" ]; then
    for i in "${HOME}/.zsh/conf.d/*.sh"; do
        if [ -r "${i}" ]; then
            . "${i}"
        fi
    done
fi

[ -f "${HOME}/.fzf.zsh" ] && source "${HOME}/.fzf.zsh"
